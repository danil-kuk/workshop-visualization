{"version":3,"sources":["components/AppTabs/AppTabs.tsx","features/diagrams/components/ChartConstants.ts","features/diagrams/components/BarChart/BarConfig.tsx","features/diagrams/components/BarChart/BarChart.tsx","features/diagrams/images/dashes.svg","features/diagrams/images/dotes.svg","features/diagrams/components/Cloud/Cloud.tsx","features/diagrams/components/Cloud/CloudConfig.ts","features/diagrams/components/Graph/GraphConfig.tsx","features/diagrams/components/Graph/KeyTechnologyGraph.tsx","features/diagrams/pages/Diagrams/Diagrams.tsx","utils/stringUtils.ts","components/AppTabs/style.module.scss","features/diagrams/components/style.module.scss","features/diagrams/pages/Diagrams/style.module.scss"],"names":["AppTabs","props","useState","activeComponentIndex","activeTab","setActiveTab","className","style","lineTabs__tabs","tabs","map","tab","index","isActive","onTab","tabClassName","name","lineTabs__content","component","Tab","classNames","cls","lineTabs__tab","lineTabs__tab_active","onClick","children","CLOUD_COLORS","FONT_FAMILY","BAR_COLORS","BarTheme","fontFamily","textColor","fontSize","axis","ticks","text","tooltip","container","background","borderRadius","BarChart","title","data","height","keys","indexBy","margin","top","right","bottom","left","padding","layout","colors","axisLeft","tickSize","axisBottom","enableGridX","enableGridY","labelTextColor","labelSkipWidth","value","color","styles","tooltipWrapper","animate","theme","Cloud","config","autoFit","wordField","weightField","colorField","wordStyle","rotation","domStyles","opacity","lineHeight","marginLeft","display","alignItems","marginRight","width","configBuilder","GetGraphConfig","hierarchical","autoResize","edges","arrows","from","middle","to","smooth","enabled","type","inherit","chosen","edge","values","interaction","hover","zoomView","dragView","tooltipDelay","nodes","scaling","label","min","max","borderWidth","node","borderColor","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springConstant","springLength","damping","avoidOverlap","solver","stabilization","iterations","updateInterval","onlyDynamicEdges","fit","groups","keyTech","border","font","face","heightConstraint","widthConstraint","shape","curator","consumer","KeyTechnologyGraph","prepare","id","truncate","group","graph","options","flex","Diagrams","useParams","eventId","Number","dispatch","useAppDispatch","event","useAppSelector","selectEventsList","find","item","diagramsData","selectDiagramsData","loading","selectLoading","useEffect","fetchDiagrams","AppLoadingSpinner","fullHeight","row","col","underlineTitle","lifeScenarioStudents","barLegend","lifeScenarioProjects","studentCompetencies","projectCompetencies","keyTechnologyCustomers","graphDescription","graphLegend","src","dotes","alt","dashes","keyTechnologyCurators","string","count","length","substr","getWordForm","number","oneForm","twoForm","fiveForm","lastTwoDigit","Math","abs","lastDigit","module","exports"],"mappings":"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","file":"static/js/6.1d8141ce.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport cls from 'classnames'\n\nimport style from './style.module.scss'\n\ninterface Props {\n  tabs: TabInfo[],\n  activeComponentIndex?: number\n}\n\ninterface TabInfo {\n  name: string,\n  component: React.ReactNode,\n  tabClassName?: string,\n}\n\nexport const AppTabs : React.FC<Props> = (props) => {\n  const [activeTab, setActiveTab] = useState(props.activeComponentIndex || 0)\n\n  return (\n    <>\n      <div className={style.lineTabs__tabs}>\n        {props.tabs.map((tab, index) => (\n          <Tab\n            isActive={index === activeTab}\n            key={index}\n            index={index}\n            onTab={(index: number) => setActiveTab(index)}\n            tabClassName={tab.tabClassName}\n          >{tab.name}\n          </Tab>),\n        )}\n      </div>\n      <div className={style.lineTabs__content}>\n        {props.tabs[activeTab].component}\n      </div>\n    </>\n  )\n}\n\ninterface TabProps {\n  isActive: boolean\n  onTab: (index: number) => void\n  index: number\n  tabClassName?: string\n}\n\nconst Tab : React.FC<TabProps> = (props) => {\n  const classNames = props.isActive ? cls([style.lineTabs__tab, style.lineTabs__tab_active, props.tabClassName]) : cls([style.lineTabs__tab, props.tabClassName])\n\n  return (\n    <div\n      className={classNames}\n      onClick={() => props.onTab(props.index)}\n    >\n      {props.children}\n    </div>\n  )\n}\n","export const CLOUD_COLORS = ['#177ddc', '#fa8c16']\nexport const FONT_FAMILY = 'Montserrat-Regular'\nexport const FONT_COLOR = '#000000'\nexport const BAR_HEIGHT = 450\nexport const CLOUD_HEIGHT = 700\n\nexport const BAR_COLORS = [\n  '#65b7f3',\n  '#177ddc',\n  '#15395b',\n]\n","import { FONT_COLOR, FONT_FAMILY } from '../ChartConstants'\nimport styles from '../style.module.scss'\n\n\nexport function GetTooltip(title: string) {\n  return function Tooltip({ value, color } : { value: number, color: string }){\n    return (\n      <div className={styles.tooltipWrapper}>\n        <span style={{ background: color }}/>\n        <span>Количество {title}: {value}</span>\n      </div>\n    )\n  }\n}\n\nexport const BarTheme = {\n  fontFamily: FONT_FAMILY,\n  textColor: FONT_COLOR,\n  fontSize: 12,\n  axis: { ticks: { text: { fontSize: 10 } } },\n  tooltip: {\n    container: {\n      background: 'var(--bg-main)',\n      borderRadius: 'var(--border-radius)',\n    },\n  },\n}\n","import React from 'react'\nimport { ResponsiveBar } from '@nivo/bar'\nimport { LifeScenarioModel } from 'src/models'\n\nimport { BAR_HEIGHT, BAR_COLORS } from '../ChartConstants'\n\nimport { BarTheme, GetTooltip } from './BarConfig'\n\ninterface Props {\n  data: LifeScenarioModel[]\n  tooltip: string\n}\n\nexport const BarChart: React.FC<Props> = ({ data, tooltip }) => (\n  <div style={{ height: BAR_HEIGHT }}>\n    <ResponsiveBar\n      data={data}\n      keys={['professionalValue', 'entrepreneurialValue', 'scientificValue']}\n      indexBy='keyTechnology'\n      margin={{\n        top: 0,\n        right: 10,\n        bottom: 20,\n        left: 130,\n      }}\n      padding={0.3}\n      layout='horizontal'\n      colors={BAR_COLORS}\n      axisLeft={{ tickSize: 0 }}\n      axisBottom={{ tickSize: 0 }}\n      enableGridX={true}\n      enableGridY={true}\n      labelTextColor='#ffffff'\n      labelSkipWidth = {1}\n      tooltip={GetTooltip(tooltip)}\n      animate={true}\n      theme={BarTheme}\n    />\n  </div>\n)\n","export default __webpack_public_path__ + \"static/media/dashes.9696e0d2.svg\";","export default __webpack_public_path__ + \"static/media/dotes.b3b6b35c.svg\";","import React from 'react'\nimport { WordCloud } from '@ant-design/charts'\nimport { CompetenciesModel } from 'src/models'\n\nimport { configBuilder } from './CloudConfig'\n\ninterface Props {\n  data: CompetenciesModel[]\n}\n\nexport const Cloud: React.FC<Props> = ({ data }) => {\n  const config = configBuilder(data)\n\n  return (\n    <WordCloud {...config}/>\n  )\n}\n","import { WordCloudConfig } from '@ant-design/charts/es/wordCloud'\nimport { CompetenciesModel } from 'src/models'\n\nimport { CLOUD_COLORS, CLOUD_HEIGHT } from '../ChartConstants'\n\nexport const configBuilder = (data : CompetenciesModel[]): WordCloudConfig => ({\n  data,\n  height: CLOUD_HEIGHT,\n  autoFit: false,\n  wordField: 'competency',\n  weightField: 'value',\n  colorField: 'competencyType',\n  color: CLOUD_COLORS,\n  padding: 10,\n  wordStyle: {\n    fontFamily: 'Montserrat-Bold',\n    fontSize: [12, 80],\n    rotation: [0, 0],\n  },\n  tooltip: {\n    domStyles: {\n      'g2-tooltip': {\n        background: 'var(--bg-main)',\n        borderRadius: 'var(--border-radius)',\n        opacity: '1',\n        fontSize: '0.875rem',\n        fontFamily: 'var(--content-font-family)',\n        color: '#000',\n        padding: '5px 9px',\n        lineHeight: 'normal',\n      },\n      'g2-tooltip-value': { marginLeft: '5px' },\n      'g2-tooltip-list-item': {\n        display: 'flex',\n        alignItems: 'center',\n        margin: '0',\n      },\n      'g2-tooltip-title': { margin: '0' },\n      'g2-tooltip-marker': {\n        marginRight: '5px',\n        width: '7px',\n        height: '7px',\n      },\n    },\n  },\n})\n","import { FONT_FAMILY } from '../ChartConstants'\n\nconst GetGraphConfig = () => ({\n  layout: { hierarchical: false },\n  autoResize: false,\n\n  edges: {\n    arrows: {\n      from: false,\n      middle: false,\n      to: false,\n    },\n    smooth: {\n      enabled: true,\n      type: 'continuous',\n    },\n    color: {\n      inherit: 'to',\n      opacity: 0.5,\n    },\n    chosen: {\n      // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n      edge: function(values : any) {\n        values.opacity = 1\n        values.width += 3\n      },\n    },\n  },\n\n  interaction: {\n    hover: true,\n    zoomView: true,\n    dragView: true,\n    tooltipDelay: 0,\n  },\n\n  nodes: {\n    scaling: {\n      label: {\n        enabled: true,\n        min: 12,\n        max: 18,\n      },\n    },\n    borderWidth: 0,\n    chosen: {\n      // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n      node: function(values: any) {\n        values.borderColor = values.color\n        values.borderWidth = 5\n      },\n    },\n  },\n\n  physics: {\n    enabled: true,\n    forceAtlas2Based: {\n      gravitationalConstant: -50,\n      centralGravity: 0.01,\n      springConstant: 0.005,\n      springLength: 100,\n      damping: 0.7,\n      avoidOverlap: 1,\n    },\n    solver: 'forceAtlas2Based',\n    stabilization: {\n      enabled: true,\n      iterations: 1000,\n      updateInterval: 100,\n      onlyDynamicEdges: false,\n      fit: true,\n    },\n  },\n  groups: {\n    keyTech: {\n      color: {\n        background: '#177ddc',\n        border: '#177ddc',\n      },\n      font: {\n        color: '#fff',\n        face: FONT_FAMILY,\n      },\n      heightConstraint: 20,\n      widthConstraint: 180,\n      shape: 'box',\n    },\n    curator: {\n      color: {\n        background: '#fa8c16',\n        border: '#fa8c16',\n      },\n      font: {\n        color: '#000',\n        face: FONT_FAMILY,\n      },\n      shape: 'dot',\n    },\n    consumer: {\n      color: {\n        background: '#fa8c16',\n        border: '#fa8c16',\n      },\n      font: {\n        color: '#000',\n        face: FONT_FAMILY,\n      },\n      shape: 'dot',\n    },\n  },\n})\n\nexport default GetGraphConfig\n","import React from 'react'\nimport Graph from 'react-graph-vis'\nimport { truncate } from 'src/utils/stringUtils'\nimport { KeyTechnologyModel } from 'src/models'\n\nimport GetGraphConfig from './GraphConfig'\n\nimport './graph.css'\n\ninterface Props {\n  data: KeyTechnologyModel\n}\n\nexport const KeyTechnologyGraph : React.FC<Props> = ({ data }) => {\n  const prepare = {\n    nodes: data.nodes.map(node =>\n      ({\n        id: node.id,\n        label: truncate(node.label, 40),\n        title: `${node.label}: ${node.value}`,\n        group: node.group,\n        value: node.value,\n      })),\n    edges: data.edges.map(edge =>\n      ({\n        from: edge.from,\n        to: edge.to,\n        value: edge.value,\n        title: `Проектов: ${edge.value}`,\n      })),\n  }\n\n  return (\n    <Graph\n      graph={prepare}\n      options={GetGraphConfig()}\n      style={{\n        flex: 2,\n        height: 700,\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { AppTabs } from 'src/components/AppTabs'\nimport { useAppDispatch, useAppSelector } from 'src/store'\nimport { selectEventsList } from 'src/store/slices/events'\nimport { fetchDiagrams, selectDiagramsData, selectLoading } from 'src/store/slices/diagrams'\nimport { AppLoadingSpinner } from 'src/components/AppLoadingSpinner'\n\nimport { BarChart } from '../../components/BarChart'\nimport dashes from '../../images/dashes.svg'\nimport dotes from '../../images/dotes.svg'\nimport { Cloud } from '../../components/Cloud'\nimport { KeyTechnologyGraph } from '../../components/Graph'\n\nimport styles from './style.module.scss'\n\nexport const Diagrams = () => {\n  const { id } = useParams()\n  const eventId = Number(id)\n  const dispatch = useAppDispatch()\n  const events = useAppSelector(selectEventsList)\n  const event = events.find(item => item.id === eventId)\n  const diagramsData = useAppSelector(selectDiagramsData(eventId))\n  const loading = useAppSelector(selectLoading)\n\n  useEffect(() => {\n    if (!diagramsData && event) {\n      dispatch(fetchDiagrams(eventId))\n    }\n  }, [eventId, diagramsData])\n\n  if (loading || !diagramsData) return <AppLoadingSpinner fullHeight />\n\n  return(\n    <div className={styles.container}>\n      <div className={styles.row}>\n        <div className={styles.col}>\n          <h2 className={styles.underlineTitle}>Студенты по жизненному сценарию и ключевой технологии</h2>\n          {diagramsData.lifeScenarioStudents &&\n          <BarChart\n            data={ diagramsData.lifeScenarioStudents}\n            tooltip={'студентов'}\n          />}\n          <div className={styles.barLegend}>\n            <div>\n              <p>Профессиональный сценарий</p>\n            </div>\n            <div>\n              <p>Предпринимательский сценарий</p>\n            </div>\n            <div>\n              <p>Научный сценарий</p>\n            </div>\n          </div>\n        </div>\n\n        <div className={styles.col}>\n          <h2 className={styles.underlineTitle}>Проекты по жизненному сценарию и ключевой технологии</h2>\n          {diagramsData.lifeScenarioProjects && <BarChart\n            data={ diagramsData.lifeScenarioProjects}\n            tooltip={'проектов'}\n          />}\n        </div>\n      </div>\n\n      <AppTabs tabs={[{\n        name: 'Компетенции студентов по популярности',\n        component: (<>{diagramsData.studentCompetencies && <Cloud data={ diagramsData.studentCompetencies} />}</>),\n        tabClassName: styles.tabs,\n      },{\n        name: 'Требования заказчиков по популярности',\n        component: (<>{diagramsData.projectCompetencies && <Cloud data={ diagramsData.projectCompetencies} />}</>),\n        tabClassName: styles.tabs,\n      }]}\n      />\n      <AppTabs tabs={[{\n        name: 'Граф заказчиков и ключевых технологий',\n        component: (\n          <div className={styles.row}>\n            {diagramsData.keyTechnologyCustomers && <KeyTechnologyGraph\n              data={ diagramsData.keyTechnologyCustomers}\n              key={1}\n            />}\n            <div className={styles.graphDescription}>\n              <p>\n                Граф отображает к каким ключевым технологиям относятся проекты заказчиков. Круглые вершины соответствуют заказчикам, прямоугольные – ключевым технологиям проектов. Чем крупнее вершина и шире ребро графа, тем больше у заказчика проектов.\n              </p>\n              <div className={styles.graphLegend}>\n                <img\n                  src={dotes}\n                  alt=\"dotes\"\n                />\n                <p>Заказчики (от малых к крупным)</p>\n              </div>\n              <div className={styles.graphLegend}>\n                <img\n                  src={dashes}\n                  alt=\"dashes\"\n                />\n                <p>Кол-во проектов заказчика (от малых к крупным)</p>\n              </div>\n            </div>\n          </div>),\n        tabClassName: styles.tabs,\n      },\n      {\n        name: 'Граф кураторов и ключевых технологий',\n        component: (\n          <div className={styles.row}>\n            {diagramsData.keyTechnologyCurators && <KeyTechnologyGraph\n              data={ diagramsData.keyTechnologyCurators}\n              key={2}\n            />}\n            <div className={styles.graphDescription}>\n              <p>\n                  Граф отображает к каким кураторам относятся проекты. Круглые вершины соответствуют кураторам, прямоугольные – ключевым технологиям заказчика. Чем крупнее вершина и шире ребро графа, тем больше у куратора проектов.\n              </p>\n              <div className={styles.graphLegend}>\n                <img\n                  src={dotes}\n                  alt=\"dotes\"\n                />\n                <p>Кураторы (от малых к крупным)</p>\n              </div>\n              <div className={styles.graphLegend}>\n                <img\n                  src={dashes}\n                  alt=\"dashes\"\n                />\n                <p>Кол-во проектов куратора (от малых к крупным)</p>\n              </div>\n            </div>\n          </div>\n        ),\n        tabClassName: styles.tabs,\n      }]}\n      />\n    </div>\n  )\n}\n","export function truncate(string: string, count: number) {\n  return (string.length > count) ? string.substr(0, count - 1) + '\\u2026' : string\n}\n\nexport function getWordForm(number: number, oneForm: string, twoForm: string, fiveForm: string) {\n  const lastTwoDigit = Math.abs(number) % 100\n  const lastDigit = lastTwoDigit % 10\n\n  if (lastTwoDigit > 10 && lastTwoDigit < 20) {\n    return fiveForm\n  }\n\n  if (lastDigit > 1 && lastDigit < 5) {\n    return twoForm\n  }\n\n  if (lastDigit === 1) {\n    return oneForm\n  }\n\n  return fiveForm\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineTabs__tabs\":\"style_lineTabs__tabs__2Po7o\",\"lineTabs__tab\":\"style_lineTabs__tab__YORJ-\",\"lineTabs__tab_active\":\"style_lineTabs__tab_active__2nHst\",\"lineTabs__content\":\"style_lineTabs__content__2lXY-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keyWrapper\":\"style_keyWrapper__XLcwa\",\"rolesWrapper\":\"style_rolesWrapper__2hTbd\",\"role\":\"style_role__1vs0e\",\"customer\":\"style_customer__ONjhg\",\"tooltipWrapper\":\"style_tooltipWrapper__cDi0y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__IncNY\",\"underlineTitle\":\"style_underlineTitle__38Zv7\",\"row\":\"style_row__3l6d_\",\"col\":\"style_col__3cEs-\",\"barLegend\":\"style_barLegend__DPSWT\",\"tabs\":\"style_tabs__pQcya\",\"graphDescription\":\"style_graphDescription__1DjTH\",\"graphLegend\":\"style_graphLegend__3UGiV\"};"],"sourceRoot":""}